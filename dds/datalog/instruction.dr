#import "header.dr"

;---------------------------------------------------------
get_instructions(EA) 
    : instruction(EA, _, _).

;---------------------------------------------------------
plausible_instruction(EA)
    : instruction(EA, _, _).

plausible_instruction(EA)
    : external_symbol(EA, _).

;---------------------------------------------------------
; Denotes instructions that *always* precede errors (e.g., 
; non-decodable instructions, or halting instructions like 
; x86's `hlt` or `ud2`). We omit instructions that *may*
; precede errors, such as conditional jumps where a single
; branch precedes an error.
#local always_leads_to_error(EA)

; Fall-throughs to non-decodable instructions or error
; instructions.
always_leads_to_error(EA)
    : instruction(EA, INSN_NORMAL, _)
    , raw_transfer(EA, ToEA, EDGE_FALL_THROUGH)
    , !plausible_instruction(ToEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_NORMAL, _)
    , raw_transfer(EA, ToEA, EDGE_FALL_THROUGH)
    , instruction(ToEA, InsnType, _)
    , InsnType = INSN_HALT.

; Direct and indirect jumps to non-decodable instructions
; or error instructions
always_leads_to_error(EA)
    : instruction(EA, INSN_DIRECT_JUMP, _)
    , raw_transfer(EA, ToEA, EDGE_JUMP_TAKEN)
    , !plausible_instruction(ToEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_INDIRECT_JUMP, _)
    , raw_transfer(EA, ToEA, EDGE_JUMP_TAKEN)
    , !plausible_instruction(ToEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_DIRECT_JUMP, _)
    , raw_transfer(EA, ToEA, EDGE_JUMP_TAKEN)
    , instruction(ToEA, InsnType, _)
    , InsnType = INSN_HALT.
always_leads_to_error(EA)
    : instruction(EA, INSN_INDIRECT_JUMP, _)
    , raw_transfer(EA, ToEA, EDGE_JUMP_TAKEN)
    , instruction(ToEA, InsnType, _)
    , InsnType = INSN_HALT.

; Direct and indirect calls to non-decodable instructions
; or error instructions. We omit return edges since the 
; target function may not return.
always_leads_to_error(EA)
    : instruction(EA, INSN_DIRECT_CALL, _)
    , raw_transfer(EA, ToEA, EDGE_FUNCTION_CALL)
    , !plausible_instruction(ToEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_INDIRECT_CALL, _)
    , raw_transfer(EA, ToEA, EDGE_FUNCTION_CALL)
    , !plausible_instruction(ToEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_DIRECT_CALL, _)
    , raw_transfer(EA, ToEA, EDGE_FUNCTION_CALL)
    , instruction(ToEA, InsnType, _)
    , InsnType = INSN_HALT.
always_leads_to_error(EA)
    : instruction(EA, INSN_INDIRECT_CALL, _)
    , raw_transfer(EA, ToEA, EDGE_FUNCTION_CALL)
    , instruction(ToEA, InsnType, _)
    , InsnType = INSN_HALT.

; Conditional direct and indirect jumps where both edges 
; precede non-decodable instructions or error instructions.
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_DIRECT_JUMP, _)
    , raw_transfer(EA, TargEA, EDGE_JUMP_TAKEN)
    , raw_transfer(EA, FallEA, EDGE_JUMP_NOT_TAKEN)
    , !plausible_instruction(TargEA)
    , !plausible_instruction(FallEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_INDIRECT_JUMP, _)
    , raw_transfer(EA, TargEA, EDGE_JUMP_TAKEN)
    , raw_transfer(EA, FallEA, EDGE_JUMP_NOT_TAKEN)
    , !plausible_instruction(TargEA)
    , !plausible_instruction(FallEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_DIRECT_JUMP, _)
    , raw_transfer(EA, TargEA, EDGE_JUMP_TAKEN)
    , raw_transfer(EA, FallEA, EDGE_JUMP_NOT_TAKEN)
    , instruction(TargEA, TargType, _)
    , TargType = INSN_HALT
    , instruction(FallEA, FallType, _)
    , FallType = INSN_HALT.
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_INDIRECT_JUMP, _)
    , raw_transfer(EA, TargEA, EDGE_JUMP_TAKEN)
    , raw_transfer(EA, FallEA, EDGE_JUMP_NOT_TAKEN)
    , instruction(TargEA, TargType, _)
    , TargType = INSN_HALT
    , instruction(FallEA, FallType, _)
    , FallType = INSN_HALT.

; Conditional direct and indirect calls where both edges 
; precede non-decodable instructions or error instructions.
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_DIRECT_CALL, _)
    , raw_transfer(EA, TargEA, EDGE_FUNCTION_CALL)
    , raw_transfer(EA, FallEA, EDGE_FUNCTION_CALL_RETURN)
    , !plausible_instruction(TargEA)
    , !plausible_instruction(FallEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_INDIRECT_CALL, _)
    , raw_transfer(EA, TargEA, EDGE_FUNCTION_CALL)
    , raw_transfer(EA, FallEA, EDGE_FUNCTION_CALL_RETURN)
    , !plausible_instruction(TargEA)
    , !plausible_instruction(FallEA).
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_DIRECT_CALL, _)
    , raw_transfer(EA, TargEA, EDGE_FUNCTION_CALL)
    , raw_transfer(EA, FallEA, EDGE_FUNCTION_CALL_RETURN)
    , instruction(TargEA, TargType, _)
    , TargType = INSN_HALT
    , instruction(FallEA, FallType, _)
    , FallType = INSN_HALT.
always_leads_to_error(EA)
    : instruction(EA, INSN_COND_INDIRECT_CALL, _)
    , raw_transfer(EA, TargEA, EDGE_FUNCTION_CALL)
    , raw_transfer(EA, FallEA, EDGE_FUNCTION_CALL_RETURN)
    , instruction(TargEA, TargType, _)
    , TargType = INSN_HALT
    , instruction(FallEA, FallType, _)
    , FallType = INSN_HALT.

; Tail calls to non-decodable and error instructions.
always_leads_to_error(EA)
	: instruction(EA, _, _)
	, raw_transfer(EA, ToEA, EDGE_TAIL_FUNCTION_CALL)
	, !plausible_instruction(ToEA).
always_leads_to_error(EA)
	: instruction(EA, _, _)
	, raw_transfer(EA, ToEA, EDGE_TAIL_FUNCTION_CALL)
	, instruction(ToEA, InsnType, _)
	, InsnType = INSN_HALT.

; PC thunk calls to non-decodable and error instructions.
always_leads_to_error(EA)
	: instruction(EA, _, _)
	, raw_transfer(EA, ToEA, EDGE_PC_THUNK_FUNCTION_CALL)
	, !plausible_instruction(ToEA).
always_leads_to_error(EA)
	: instruction(EA, _, _)
	, raw_transfer(EA, ToEA, EDGE_PC_THUNK_FUNCTION_CALL)
	, instruction(ToEA, InsnType, _)
	, InsnType = INSN_HALT.

; Inductive case. We omit pseudo fall-throughs as these are
; artificial edges.
always_leads_to_error(EA)
    : instruction(EA, _, _)
    , raw_transfer(EA, ToEA, EdgeType)
    , EdgeType != EDGE_PSEUDO_FALL_THROUGH
    , always_leads_to_error(ToEA).


