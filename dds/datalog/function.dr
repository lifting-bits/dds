#import "header.dr"

;---------------------------------------------------------
; If we have an interprocedural transfer.
function(FuncEA)
  : transfer(_, FuncEA, EDGE_CALL_TARG).

; Any type of control-flow transfer to an external is treated ;
; as a making that external into a function.
function(FuncEA)
  : external_symbol(FuncEA, _)
  , transfer(_, FuncEA, _).

; The binary entrypoint is treated as a function.
function(EntryPointEA)
  : entrypoint(EntryPointEA)
  , plausible_instruction(EntryPointEA).

; An indirect jump in the `.plt` that has a been rewritten
; as an external transfer is treated as a function head.
function(FuncEA)
  : instruction(FuncEA, INSN_INDIRECT_JUMP, _, _)
  , transfer(FuncEA, ExternEA, EDGE_JUMP_TARG)
  , external_symbol(ExternEA, _).

; Mark all constructor functions.
function(FuncEA)
  : constructor_function(FuncEA)
  , instruction(FuncEA, _, _, _).

; Mark all destructor functions.
function(FuncEA)
  : destructor_function(FuncEA)
  , instruction(FuncEA, _, _, _). 

;---------------------------------------------------------
; If an instruction begins a function, it is part of it.
function_instruction(FuncEA, FuncEA)
  : function(FuncEA).

; A function's intraproc-connected instructions are part of it.
function_instruction(FuncEA, NextEA)
  : function_instruction(FuncEA, InsnEA)
  , intraproc_transfer(InsnEA, NextEA).

  