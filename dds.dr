#prologue ```python
from capstone import CsInsn
```
;---------------------------------------------------------
; Personalities
;---------------------------------------------------------
; Section personalities 
#foreign personality ```python int```
#constant personality SECTION_EXEC ```python 0```
#constant personality SECTION_DATA ```python 1```

; Instruction personalities
#constant personality INSN_NORMAL             ```python 0```
#constant personality INSN_DIRECT_JUMP        ```python 1```
#constant personality INSN_INDIRECT_JUMP      ```python 2```
#constant personality INSN_COND_DIRECT_JUMP   ```python 3```
#constant personality INSN_COND_INDIRECT_JUMP ```python 4```
#constant personality INSN_DIRECT_CALL        ```python 5```
#constant personality INSN_INDIRECT_CALL      ```python 6```
#constant personality INSN_RETURN             ```python 7```
#constant personality INSN_NOP                ```python 8```

; Flow personalities
#constant personality FLOW_INTRA_PROC         ```python 0```
#constant personality FLOW_INTER_PROC         ```python 1```

; Edge personalities
#constant personality EDGE_FALLTHRU           ```python 0```
#constant personality EDGE_JUMP_TARG          ```python 1```
#constant personality EDGE_COND_TRUE          ```python 2```
#constant personality EDGE_COND_FALSE         ```python 3```
#constant personality EDGE_CALL_TARG          ```python 4```
#constant personality EDGE_PSEUDO             ```python 5```

;---------------------------------------------------------
; Sections
;---------------------------------------------------------
#message section(bytes Name, u64 Start, u64 End, personality Exec)

#query get_sections(free bytes Name)
get_sections(SecName): section(SecName,_,_,_).

;---------------------------------------------------------
; Functions
;---------------------------------------------------------
#message    function(u64 FuncEA)

#query get_functions(free u64 FuncEA)
get_functions(FuncEA): function(FuncEA).


;---------------------------------------------------------
; Instructions
;---------------------------------------------------------
#message instruction(u64 InsnEA, personality InsnType, u64 FuncEA, bytes SecName)

#query get_instructions(free u64 InsnEA)
get_instructions(InsnEA): instruction(InsnEA,_,_,_).

#query get_section_instructions(bound bytes SecName, free u64 InsnEA)
get_section_instructions(SecName, InsnEA):
  section(SecName,_,_,_),
  instruction(InsnEA,_,_,SecName).

#query get_function_instructions(bound u64 FuncEA, free u64 InsnEA)
get_function_instructions(FuncEA, InsnEA):
  function(FuncEA),
  function_instruction(InsnEA,FuncEA).
  
;---------------------------------------------------------
; Control-flow Transfers
;---------------------------------------------------------
#message instruction_transfer(u64 InsnEA, u64 NextEA, personality EdgeType, personality FlowType)

#query get_direct_call_targets(free u64 TargEA)
get_direct_call_targets(TargEA):
  instruction(InsnEA,INSN_DIRECT_CALL,_,_),
  instruction(TargEA,_,_,_),
  instruction_transfer(InsnEA,TargEA,EDGE_CALL_TARG,_).

#query get_intraproc_successor(bound u64 InsnEA, free u64 NextEA)
get_intraproc_successor(InsnEA,NextEA):
  instruction(NextEA,_,_,_),
  instruction_transfer(InsnEA,NextEA,_,FLOW_INTRA_PROC).






